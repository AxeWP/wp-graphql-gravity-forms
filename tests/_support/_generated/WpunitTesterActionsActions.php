<?php  //[STAMP] a66f4ee166676b67852e168a4856522e
namespace _generated;

// This class was automatically generated by build task
// You should not change it manually as it will be overwritten on next build
// @codingStandardsIgnoreFile

trait WpunitTesterActionsActions
{
    /**
     * @return \Codeception\Scenario
     */
    abstract protected function getScenario();

    
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * Returns the absolute path to the plugins directory.
     *
     * The value will first look at the `WP_PLUGIN_DIR` constant, then the `pluginsFolder` configuration parameter
     * and will, finally, look in the default path from the WordPress root directory.
     *
     * @example
     * ```php
     * $plugins = $this->getPluginsFolder();
     * $hello = $this->getPluginsFolder('hello.php');
     * ```
     *
     * @param string $path A relative path to append to te plugins directory absolute path.
     *
     * @return string The absolute path to the `pluginsFolder` path or the same with a relative path appended if `$path`
     *                is provided.
     *
     * @throws ModuleConfigException If the path to the plugins folder does not exist.
     * @see \Codeception\Module\WPLoader::getPluginsFolder()
     */
    public function getPluginsFolder($path = "") {
        return $this->getScenario()->runStep(new \Codeception\Step\Action('getPluginsFolder', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * Accessor method to get the object storing the factories for things.
     * This methods gives access to the same factories provided by the
     * [Core test suite](https://make.wordpress.org/core/handbook/testing/automated-testing/writing-phpunit-tests/).
     *
     * @return FactoryStore A factory store, proxy to get hold of the Core suite object
     *                                                     factories.
     *
     * @example
     * ```php
     * $postId = $I->factory()->post->create();
     * $userId = $I->factory()->user->create(['role' => 'administrator']);
     * ```
     *
     * @link https://make.wordpress.org/core/handbook/testing/automated-testing/writing-phpunit-tests/
     * @see \Codeception\Module\WPLoader::factory()
     */
    public function factory() {
        return $this->getScenario()->runStep(new \Codeception\Step\Action('factory', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * Returns the absolute path to the WordPress content directory.
     *
     * @example
     * ```php
     * $content = $this->getContentFolder();
     * $themes = $this->getContentFolder('themes');
     * $twentytwenty = $this->getContentFolder('themes/twentytwenty');
     * ```
     *
     * @param string $path An optional path to append to the content directory absolute path.
     *
     * @return string The content directory absolute path, or a path in it.
     *
     * @throws ModuleConfigException If the path to the content directory cannot be resolved.
     * @see \Codeception\Module\WPLoader::getContentFolder()
     */
    public function getContentFolder($path = "") {
        return $this->getScenario()->runStep(new \Codeception\Step\Action('getContentFolder', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * Starts the debug of all WordPress filters and actions.
     *
     * The method hook on `all` filters and actions to debug their value.
     *
     * @example
     * ```php
     * // Start debugging all WordPress filters and action final and initial values.
     * $this->startWpFiltersDebug();
     *
     * // Run some code firing filters and debug them.
     *
     * // Stop debugging all WordPress filters and action final and initial values.
     * $this->stopWpFiltersDebug();
     * ```
     *
     * @param callable|null $format A callback function to format the arguments debug output; the callback will receive
     *                              the array of arguments as input.
     *
     * @return void
     * @see \Codeception\Module\WPLoader::startWpFiltersDebug()
     */
    public function startWpFiltersDebug(?callable $format = NULL) {
        return $this->getScenario()->runStep(new \Codeception\Step\Action('startWpFiltersDebug', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * Stops the debug of all WordPress filters and actions.
     *
     * @example
     * ```php
     * // Start debugging all WordPress filters and action final and initial values.
     * $this->startWpFiltersDebug();
     *
     * // Run some code firing filters and debug them.
     *
     * // Stop debugging all WordPress filters and action final and initial values.
     * $this->stopWpFiltersDebug();
     * ```
     *
     * @return void
     * @see \Codeception\Module\WPLoader::stopWpFiltersDebug()
     */
    public function stopWpFiltersDebug() {
        return $this->getScenario()->runStep(new \Codeception\Step\Action('stopWpFiltersDebug', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * Debugs a single WordPress filter initial call using Codeception debug functions.
     *
     * The output will show following the selected output verbosity (`--debug` and `-vvv` CLI options).
     *
     * @example
     * ```php
     * // Start debugging all WordPress filters initial value.
     * add_filter('all', [$this,'debugWpFilterInitial']);
     *
     * // Run some code firing filters and debug them.
     *
     * // Stop debugging all WordPress filters initial value.
     * remove_filter('all', [$this,'debugWpFilterInitial']);
     * ```
     *
     * @param mixed ...$args The filter call arguments.
     *
     * @return mixed The filter input value, unchanged.
     * @see \Codeception\Module\WPLoader::debugWpFilterInitial()
     */
    public function debugWpFilterInitial($args = null) {
        return $this->getScenario()->runStep(new \Codeception\Step\Action('debugWpFilterInitial', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * Debugs a single WordPress filter final call using Codeception debug functions.
     *
     * The output will show following the selected output verbosity (`--debug` and `-vvv` CLI options).
     *
     * @example
     * ```php
     * // Start debugging all WordPress filters final value.
     * add_filter('all', [$this,'debugWpFilterFinal']);
     *
     * // Run some code firing filters and debug them.
     *
     * // Stop debugging all WordPress filters final value.
     * remove_filter('all', [$this,'debugWpFilterFinal']);
     * ```
     *
     * @param mixed ...$args The filter call arguments.
     *
     * @return mixed The filter input value, unchanged.
     * @see \Codeception\Module\WPLoader::debugWpFilterFinal()
     */
    public function debugWpFilterFinal($args = null) {
        return $this->getScenario()->runStep(new \Codeception\Step\Action('debugWpFilterFinal', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * Debugs a single WordPress action initial call using Codeception debug functions.
     *
     * The output will show following the selected output verbosity (`--debug` and `-vvv` CLI options).
     *
     * @example
     * ```php
     * // Start debugging all WordPress actions initial value.
     * add_action('all', [$this,'debugWpActionInitial']);
     *
     * // Run some code firing actions and debug them.
     *
     * // Stop debugging all WordPress actions initial value.
     * remove_action('all', [$this,'debugWpActionInitial']);
     * ```
     *
     * @param mixed ...$args The action call arguments.
     *
     * @return void
     * @see \Codeception\Module\WPLoader::debugWpActionInitial()
     */
    public function debugWpActionInitial($args = null) {
        return $this->getScenario()->runStep(new \Codeception\Step\Action('debugWpActionInitial', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * Debugs a single WordPress action final call using Codeception debug functions.
     *
     * The output will show following the selected output verbosity (`--debug` and `-vvv` CLI options).
     *
     * @example
     * ```php
     * // Start debugging all WordPress actions final value.
     * add_action('all', [$this,'debugWpActionFinal']);
     *
     * // Run some code firing actions and debug them.
     *
     * // Stop debugging all WordPress actions final value.
     * remove_action('all', [$this,'debugWpActionFinal']);
     * ```
     *
     * @param mixed ...$args The action call arguments.
     *
     * @return void
     * @see \Codeception\Module\WPLoader::debugWpActionFinal()
     */
    public function debugWpActionFinal($args = null) {
        return $this->getScenario()->runStep(new \Codeception\Step\Action('debugWpActionFinal', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * Generates the property helper for the field.
	 *
	 * @param string $type .
	 * @param array  $args .
	 * @return PropertyHelper
     * @see \Helper\Wpunit::getPropertyHelper()
     */
    public function getPropertyHelper(string $type, array $args = []): \Helper\GFHelpers\PropertyHelper {
        return $this->getScenario()->runStep(new \Codeception\Step\Action('getPropertyHelper', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * Gets the default args used by all fields.
     * @see \Helper\Wpunit::getDefaultArgs()
     */
    public function getDefaultArgs(): array {
        return $this->getScenario()->runStep(new \Codeception\Step\Action('getDefaultArgs', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * Get the default args for an address field.
     * @see \Helper\Wpunit::getAddressFieldArgs()
     */
    public function getAddressFieldArgs(): array {
        return $this->getScenario()->runStep(new \Codeception\Step\Action('getAddressFieldArgs', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * Get the default args for a Captcha field.
     * @see \Helper\Wpunit::getCaptchaFieldArgs()
     */
    public function getCaptchaFieldArgs(): array {
        return $this->getScenario()->runStep(new \Codeception\Step\Action('getCaptchaFieldArgs', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * Get the default args for a ChainedSelect field.
     * @see \Helper\Wpunit::getChainedSelectFieldArgs()
     */
    public function getChainedSelectFieldArgs(): array {
        return $this->getScenario()->runStep(new \Codeception\Step\Action('getChainedSelectFieldArgs', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * Get the default args for a Checkbox field.
     * @see \Helper\Wpunit::getCheckboxFieldArgs()
     */
    public function getCheckboxFieldArgs(): array {
        return $this->getScenario()->runStep(new \Codeception\Step\Action('getCheckboxFieldArgs', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * Get the default args for a consent field.
     * @see \Helper\Wpunit::getConsentFieldArgs()
     */
    public function getConsentFieldArgs(): array {
        return $this->getScenario()->runStep(new \Codeception\Step\Action('getConsentFieldArgs', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * Get the default args for a consent field.
     * @see \Helper\Wpunit::getDateFieldArgs()
     */
    public function getDateFieldArgs(): array {
        return $this->getScenario()->runStep(new \Codeception\Step\Action('getDateFieldArgs', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * Get the default args for an email field.
     * @see \Helper\Wpunit::getEmailFieldArgs()
     */
    public function getEmailFieldArgs(): array {
        return $this->getScenario()->runStep(new \Codeception\Step\Action('getEmailFieldArgs', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * Get the default args for an email field.
     * @see \Helper\Wpunit::getFileUploadFieldArgs()
     */
    public function getFileUploadFieldArgs(): array {
        return $this->getScenario()->runStep(new \Codeception\Step\Action('getFileUploadFieldArgs', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * Get the default args for a hidden field.
     * @see \Helper\Wpunit::getHiddenFieldArgs()
     */
    public function getHiddenFieldArgs(): array {
        return $this->getScenario()->runStep(new \Codeception\Step\Action('getHiddenFieldArgs', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * Get args for HTML field.
     * @see \Helper\Wpunit::getHtmlFieldArgs()
     */
    public function getHtmlFieldArgs(): array {
        return $this->getScenario()->runStep(new \Codeception\Step\Action('getHtmlFieldArgs', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * Get the default args for a list field.
     * @see \Helper\Wpunit::getListFieldArgs()
     */
    public function getListFieldArgs(): array {
        return $this->getScenario()->runStep(new \Codeception\Step\Action('getListFieldArgs', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * Get the default args for a MultiSelect field.
     * @see \Helper\Wpunit::getMultiSelectFieldArgs()
     */
    public function getMultiSelectFieldArgs(): array {
        return $this->getScenario()->runStep(new \Codeception\Step\Action('getMultiSelectFieldArgs', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * Get the default args for a name field.
     * @see \Helper\Wpunit::getNameFieldArgs()
     */
    public function getNameFieldArgs(): array {
        return $this->getScenario()->runStep(new \Codeception\Step\Action('getNameFieldArgs', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * Get the default args for a number field.
     * @see \Helper\Wpunit::getNumberFieldArgs()
     */
    public function getNumberFieldArgs(): array {
        return $this->getScenario()->runStep(new \Codeception\Step\Action('getNumberFieldArgs', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * Get args for page field.
     * @see \Helper\Wpunit::getPageFieldArgs()
     */
    public function getPageFieldArgs(): array {
        return $this->getScenario()->runStep(new \Codeception\Step\Action('getPageFieldArgs', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * Get the default args for a Phone field.
     * @see \Helper\Wpunit::getPhoneFieldArgs()
     */
    public function getPhoneFieldArgs(): array {
        return $this->getScenario()->runStep(new \Codeception\Step\Action('getPhoneFieldArgs', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * Get the default args for a PostContent field.
     * @see \Helper\Wpunit::getPostContentFieldArgs()
     */
    public function getPostContentFieldArgs(): array {
        return $this->getScenario()->runStep(new \Codeception\Step\Action('getPostContentFieldArgs', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * Get the default args for a PostExcerpt field.
     * @see \Helper\Wpunit::getPostExcerptFieldArgs()
     */
    public function getPostExcerptFieldArgs(): array {
        return $this->getScenario()->runStep(new \Codeception\Step\Action('getPostExcerptFieldArgs', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * Get the default args for an email field.
     * @see \Helper\Wpunit::getPostImageFieldArgs()
     */
    public function getPostImageFieldArgs(): array {
        return $this->getScenario()->runStep(new \Codeception\Step\Action('getPostImageFieldArgs', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * Get the default args for a PostTitle field.
     * @see \Helper\Wpunit::getPostTitleFieldArgs()
     */
    public function getPostTitleFieldArgs(): array {
        return $this->getScenario()->runStep(new \Codeception\Step\Action('getPostTitleFieldArgs', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * Get the default args for a Quiz field
     * @see \Helper\Wpunit::getQuizFieldArgs()
     */
    public function getQuizFieldArgs(): array {
        return $this->getScenario()->runStep(new \Codeception\Step\Action('getQuizFieldArgs', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * Get the default args for a radio field.
     * @see \Helper\Wpunit::getRadioFieldArgs()
     */
    public function getRadioFieldArgs(): array {
        return $this->getScenario()->runStep(new \Codeception\Step\Action('getRadioFieldArgs', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * Get args for section field.
     * @see \Helper\Wpunit::getSectionFieldArgs()
     */
    public function getSectionFieldArgs(): array {
        return $this->getScenario()->runStep(new \Codeception\Step\Action('getSectionFieldArgs', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * Get the default args for a select field.
     * @see \Helper\Wpunit::getSelectFieldArgs()
     */
    public function getSelectFieldArgs(): array {
        return $this->getScenario()->runStep(new \Codeception\Step\Action('getSelectFieldArgs', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * Get the default args for a signature field.
     * @see \Helper\Wpunit::getSignatureFieldArgs()
     */
    public function getSignatureFieldArgs(): array {
        return $this->getScenario()->runStep(new \Codeception\Step\Action('getSignatureFieldArgs', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * Get the default args for a text field.
     * @see \Helper\Wpunit::getTextFieldArgs()
     */
    public function getTextFieldArgs(): array {
        return $this->getScenario()->runStep(new \Codeception\Step\Action('getTextFieldArgs', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * Get the default args for a textarea field.
     * @see \Helper\Wpunit::getTextAreaFieldArgs()
     */
    public function getTextAreaFieldArgs(): array {
        return $this->getScenario()->runStep(new \Codeception\Step\Action('getTextAreaFieldArgs', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * Get the default args for a time field.
     * @see \Helper\Wpunit::getTimeFieldArgs()
     */
    public function getTimeFieldArgs(): array {
        return $this->getScenario()->runStep(new \Codeception\Step\Action('getTimeFieldArgs', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * Get default args for website field.
     * @see \Helper\Wpunit::getWebsiteFieldArgs()
     */
    public function getWebsiteFieldArgs(): array {
        return $this->getScenario()->runStep(new \Codeception\Step\Action('getWebsiteFieldArgs', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * Get the default args for a form.
	 *
	 * @param array $args .
     * @see \Helper\Wpunit::getFormDefaultArgs()
     */
    public function getFormDefaultArgs($args = []): array {
        return $this->getScenario()->runStep(new \Codeception\Step\Action('getFormDefaultArgs', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * Converts a string value to its Enum equivalent
	 *
	 * @param string      $enumName Name of the Enum registered in GraphQL.
	 * @param string|null $value .
	 * @return string|null
     * @see \Helper\Wpunit::get_enum_for_value()
     */
    public function get_enum_for_value(string $enumName, $value) {
        return $this->getScenario()->runStep(new \Codeception\Step\Action('get_enum_for_value', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * Merges default args with custom ones.
	 *
	 * @param array $default .
	 * @param array $custom .
     * @see \Helper\Wpunit::merge_default_args()
     */
    public function merge_default_args(array $default, array $custom = []): array {
        return $this->getScenario()->runStep(new \Codeception\Step\Action('merge_default_args', func_get_args()));
    }
}
